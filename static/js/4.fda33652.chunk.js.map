{"version":3,"sources":["components/desingGame/DesignGame.tsx"],"names":["DesignGame","useState","getGameConfigByDificulty","Difficulty","Easy","config","setConfig","difficulty","setDificulty","levelRef","useRef","dispatch","useContext","gameConfig","useEffect","current","onSelection","level","updateCustomChange","event","type","dim","value","tempConfig","gridSize","m","n","bombInTheGame","className","id","name","onChange","defaultChecked","htmlFor","Medium","Hard","Custom","MAX_DIM_LENGTH","min","defaultValue","placeholder","Number","target","onClick","alert","ERROR","MORE_BOMBS","LESS_BOMS","GRID_ERROR","MAX_DIM","createGameStateAction","CHOOSE_GRID","GAME_STATE_CHANGED","GAME_STATUS","GAME_IN_PROGRESS"],"mappings":"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","file":"static/js/4.fda33652.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, Fragment, useRef } from 'react';\nimport { gameConfig } from '../../store/store';\nimport './DesignGame.css';\nimport Config from '../../models/config';\nimport getGameConfigByDificulty, { Difficulty, GAME_STATUS, ERROR, MAX_DIM_LENGTH } from '../../constants/constant';\nimport { createGameStateAction, CHOOSE_GRID, GAME_STATE_CHANGED } from '../../models/action';\n\nconst DesignGame = () => {\n    const [config, setConfig] = useState<Config>(getGameConfigByDificulty(Difficulty.Easy));\n    const [difficulty, setDificulty] = useState(Difficulty.Easy);\n    const levelRef = useRef(Difficulty.Easy);\n    const { dispatch } = useContext(gameConfig);\n\n    useEffect(() => {\n        setDificulty(levelRef.current);\n    }, [config])\n\n\n    const onSelection = (level: Difficulty) => {\n        setConfig(getGameConfigByDificulty(level));\n        levelRef.current = level;\n    }\n\n    const updateCustomChange = (event: any, type: string, dim = \"\", value: number) => {\n        const tempConfig = { ...config };\n        if (type === \"grid\") {\n            dim === \"m\" ? tempConfig.gridSize.m = value : tempConfig.gridSize.n = value\n        } else {\n            tempConfig.bombInTheGame = value;\n        }\n        setConfig(tempConfig);\n    }\n\n    const startGame = () => {\n        if (config.gridSize.m * config.gridSize.n <= config.bombInTheGame) {\n            alert(ERROR.MORE_BOMBS);\n            return;\n        }\n        if (config.bombInTheGame < 1) {\n            alert(ERROR.LESS_BOMS);\n            return;\n        }\n        if (config.gridSize.m * config.gridSize.n < 2) {\n            alert(ERROR.GRID_ERROR);\n            return;\n        }\n        if (config.gridSize.m > MAX_DIM_LENGTH || config.gridSize.n > MAX_DIM_LENGTH) {\n            alert(ERROR.MAX_DIM);\n            return;\n        }\n        if (dispatch) {\n            dispatch(createGameStateAction(CHOOSE_GRID, config));\n            dispatch(createGameStateAction(GAME_STATE_CHANGED, GAME_STATUS.GAME_IN_PROGRESS));\n        }\n    }\n\n    return <section className=\"designGame fadeEffect\">\n        <div className=\"designGame-form\">\n            <h3 className=\"margin-top-20\">Please select the difficulty level:</h3>\n            <div className=\"margin-top-20\">\n                <input type=\"radio\" id=\"easy\" name=\"difficulty\" value=\"easy\" onChange={() => onSelection(Difficulty.Easy)} defaultChecked={true} />\n                <label htmlFor=\"easy\">Easy ( 5 * 5 grid with 5 bombs )</label>\n            </div>\n            <div className=\"margin-top-20\">\n                <input type=\"radio\" id=\"medium\" name=\"difficulty\" value=\"medium\" onChange={() => onSelection(Difficulty.Medium)} />\n                <label htmlFor=\"medium\">Medium ( 10 * 10 grid with 20 bombs )</label></div>\n            <div className=\"margin-top-20\">\n                <input type=\"radio\" id=\"hard\" name=\"difficulty\" value=\"hard\" onChange={() => onSelection(Difficulty.Hard)} />\n                <label htmlFor=\"hard\">Hard ( 15 * 15 grid with 45 bombs )</label>\n            </div>\n            <div className=\"designGame-form-custom margin-top-20\">\n                <div className=\"margin-top-20\">\n                    <input type=\"radio\" id=\"custom\" name=\"difficulty\" value=\"custom\" onChange={() => onSelection(Difficulty.Custom)} />\n                    <label htmlFor=\"custom\">Customise Your Game ( Maximum {MAX_DIM_LENGTH} row or column allowed )</label>\n                </div>\n                {\n                    difficulty === Difficulty.Custom ? <Fragment> <div className=\"margin-top-20\">\n                        <label className=\"designGame-form--label\">Enter Grid Size : </label>\n                        <input className=\"designGame-form-custom--input\" type=\"number\"\n                            name=\"custom\" min=\"0\" defaultValue={config.gridSize.m} placeholder=\"Enter Row Size\" onChange={(event) => updateCustomChange(event, \"grid\", \"m\", Number(event.target.value))} />\n                        x\n                    <input className=\"designGame-form-custom--input\" type=\"number\"\n                            name=\"customN\" min=\"0\" defaultValue={config.gridSize.n} placeholder=\"Enter Column Size\" onChange={(event) => updateCustomChange(event, \"grid\", \"n\", Number(event.target.value))} />\n                    </div>\n                        <div className=\"margin-top-20\">\n                            <label className=\"designGame-form--label\">Enter Bombs In the Game : </label>\n                            <input className=\"designGame-form-custom--input\" type=\"number\"\n                                name=\"custom\" min=\"0\" defaultValue={config.bombInTheGame} placeholder=\"Enter Bombs\" onChange={(event) => updateCustomChange(event, \"bomb\", \"\", Number(event.target.value))} />\n                        </div>\n                    </Fragment> : \"\"\n                }\n\n\n            </div>\n            <button className=\"margin-top-20\" type=\"submit\" value=\"Start Game\" onClick={() => { startGame() }}>Start Game</button>\n        </div>\n    </section>\n}\n\nexport default DesignGame;"],"sourceRoot":""}